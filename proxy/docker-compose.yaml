version: '3'

services:
  proxy:
    # The official v3 Traefik docker image
    image: traefik:v3.0
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - --api.insecure=true
      - --api.debug=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Activate Logs on stdout
      - --accesslog=true
      #- --log.level=DEBUG

      # Ready to rumble lets'encrypt with DNSAPI
      # - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      # - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=ovh"
      # #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      # - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_MAIL:?}"
      # - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

      # Ready to rumble lets'encrypt with challenge
      # - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      # #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      # - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_MAIL:?}"
      # - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

    security_opt:
      - no-new-privileges:true
    read_only: true
    mem_limit: 2G
    cpus: 0.75
    # Ready to rumble lets'encrypt with DNSAPI    
    # environment:
    #   - "OVH_ENDPOINT=${OVH_ENDPOINT:?}"
    #   - "OVH_APPLICATION_KEY=${OVH_APPLICATION_KEY:?}"
    #   - "OVH_APPLICATION_SECRET=${OVH_APPLICATION_SECRET:?}"
    #   - "OVH_CONSUMER_KEY=${OVH_CONSUMER_KEY:?}"
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443/tcp"
      - "443:443/udp"
      # The Web UI (enabled by --api.insecure=true)
      - "127.0.0.1:8080:8080"
    healthcheck:
      test: 
        - CMD
        - traefik
        - healthcheck
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - traefik

  #Error and default container
  default-nginx:
    # A container that exposes an API to show its IP address
    image: nginx
    labels:
      - traefik.enable=true
      # Handling non tls
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=HostRegexp(`.*`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=false
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=web
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.priority=1
      # Handling tls
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-tls.rule=HostRegexp(`.*`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-tls.tls=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-tls.entrypoints=websecure
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-tls.priority=1

    depends_on:
      - proxy
    volumes:
      - ./nginx/static:/usr/share/nginx/html
    networks:
      - traefik

networks:
  traefik:
    name: traefik